use super::instruction::{Instruction, InstructionCycle::*};

macro_rules! instruction_table {
    ($($_: literal: $identifier: expr, $($cycles: expr)=>*);+) => {
        &[
            $(Instruction {identifier: $identifier, cycles: &[$($cycles,)*]},)*
        ]
    };
}

pub const INSTRUCTIONS: &[Instruction] = instruction_table!(
    0x00: "NYI", NYI;
    0x01: "ORA (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>Ora;
    0x02: "NYI", NYI;
    0x03: "NYI", NYI;
    0x04: "NYI", NYI;
    0x05: "ORA zpg", ZpgOperand=>ZpgOperand2=>Ora;
    0x06: "ASL zpg", ZpgOperand=>ZpgOperand2=>DummyWrite=>Asl;
    0x07: "NYI", NYI;
    0x08: "PHP", Read=>Php;
    0x09: "ORA imm", ImmOperand=>Ora;
    0x0A: "ASL a", Read=>AslA;
    0x0B: "NYI", NYI;
    0x0C: "NYI", NYI;
    0x0D: "ORA abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Ora;
    0x0E: "ASL abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>DummyWrite=>Asl;
    0x0F: "NYI", NYI;
    0x10: "BPL rel", RelOperand=>Bpl=>RelBranch1=>RelBranch2;
    0x11: "ORA (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>Ora;
    0x12: "NYI", NYI;
    0x13: "NYI", NYI;
    0x14: "NYI", NYI;
    0x15: "ORA zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Ora;
    0x16: "ASL zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>DummyWrite=>Asl;
    0x17: "NYI", NYI;
    0x18: "CLC impl", Read=>Clc;
    0x19: "ORA abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Ora;
    0x1A: "NYI", NYI;
    0x1B: "NYI", NYI;
    0x1C: "NYI", NYI;
    0x1D: "ORA abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Ora;
    0x1E: "ASL abs,x", AbsOperand1=>AbsOperand2=>AbsXOperandNoSkip=>AbsIndexedPageCross=>DummyWrite=>Asl;
    0x1F: "NYI", NYI;
    0x20: "JSR abs", Jsr1=>Jsr2=>Jsr3=>Jsr4=>Jsr5=>Jsr6;
    0x21: "AND (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>And;
    0x22: "NYI", NYI;
    0x23: "NYI", NYI;
    0x24: "NYI", NYI;
    0x25: "AND zpg", ZpgOperand=>ZpgOperand2=>And;
    0x26: "ROL zpg", ZpgOperand=>ZpgOperand2=>DummyWrite=>Rol;
    0x27: "NYI", NYI;
    0x28: "PLP", Read=>ReadStack=>PopStack=>Plp;
    0x29: "AND imm", ImmOperand=>And;
    0x2A: "ROL a", Read=>RolA;
    0x2B: "NYI", NYI;
    0x2C: "NYI", NYI;
    0x2D: "AND abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>And;
    0x2E: "ROL abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>DummyWrite=>Rol;
    0x2F: "NYI", NYI;
    0x30: "BMI rel", RelOperand=>Bmi=>RelBranch1=>RelBranch2;
    0x31: "AND (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>And;
    0x32: "NYI", NYI;
    0x33: "NYI", NYI;
    0x34: "NYI", NYI;
    0x35: "AND zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>And;
    0x36: "ROL zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>DummyWrite=>Rol;
    0x37: "NYI", NYI;
    0x38: "SEC impl", Read=>Sec;
    0x39: "AND abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>And;
    0x3A: "NYI", NYI;
    0x3B: "NYI", NYI;
    0x3C: "NYI", NYI;
    0x3D: "AND abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>And;
    0x3E: "ROL abs,x", AbsOperand1=>AbsOperand2=>AbsXOperandNoSkip=>AbsIndexedPageCross=>DummyWrite=>Rol;
    0x3F: "NYI", NYI;
    0x40: "RTI impl", ReadInc=>ReadStack=>PullStatus=>Rts2=>Rts3=>Rts4;
    0x41: "EOR (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>Eor;
    0x42: "NYI", NYI;
    0x43: "NYI", NYI;
    0x44: "NYI", NYI;
    0x45: "EOR zpg", ZpgOperand=>ZpgOperand2=>Eor;
    0x46: "LSR zpg", ZpgOperand=>ZpgOperand2=>DummyWrite=>Lsr;
    0x47: "NYI", NYI;
    0x48: "PHA impl", Read=>Pha;
    0x49: "EOR imm", ImmOperand=>Eor;
    0x4A: "LSR a", Read=>LsrA;
    0x4B: "NYI", NYI;
    0x4C: "JMP abs", AbsOperand1=>AbsOperand2=>JmpAbs;
    0x4D: "EOR abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Eor;
    0x4E: "LSR abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>DummyWrite=>Lsr;
    0x4F: "NYI", NYI;
    0x50: "BVC rel", RelOperand=>Bvc=>RelBranch1=>RelBranch2;
    0x51: "EOR (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>Eor;
    0x52: "NYI", NYI;
    0x53: "NYI", NYI;
    0x54: "NYI", NYI;
    0x55: "EOR zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Eor;
    0x56: "LSR zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>DummyWrite=>Lsr;
    0x57: "NYI", NYI;
    0x58: "CLI impl", Read=>Cli;
    0x59: "EOR abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Eor;
    0x5A: "NYI", NYI;
    0x5B: "NYI", NYI;
    0x5C: "NYI", NYI;
    0x5D: "EOR abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Eor;
    0x5E: "LSR abs,x", AbsOperand1=>AbsOperand2=>AbsXOperandNoSkip=>AbsIndexedPageCross=>DummyWrite=>Lsr;
    0x5F: "NYI", NYI;
    0x60: "RTS impl", ReadInc=>Rts1=>Rts2=>Rts3=>Rts4=>Read;
    0x61: "ADC (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>Adc;
    0x62: "NYI", NYI;
    0x63: "NYI", NYI;
    0x64: "NYI", NYI;
    0x65: "ADC zpg", ZpgOperand=>ZpgOperand2=>Adc;
    0x66: "ROR zpg", ZpgOperand=>ZpgOperand2=>DummyWrite=>Ror;
    0x67: "NYI", NYI;
    0x68: "PLA impl", Read=>ReadStack=>PopStack=>Pla;
    0x69: "ADC imm", ImmOperand=>Adc;
    0x6A: "ROR a", Read=>RorA;
    0x6B: "NYI", NYI;
    0x6C: "JMP (abs)", AbsOperand1=>AbsOperand2=>IndirectOperand=>AbsOperand2=>JmpAbs;
    0x6D: "ADC abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Adc;
    0x6E: "ROR abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>DummyWrite=>Ror;
    0x6F: "NYI", NYI;
    0x70: "BVS rel", RelOperand=>Bvs=>RelBranch1=>RelBranch2;
    0x71: "ADC (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>Adc;
    0x72: "NYI", NYI;
    0x73: "NYI", NYI;
    0x74: "NYI", NYI;
    0x75: "ADC zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Adc;
    0x76: "ROR zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>DummyWrite=>Ror;
    0x77: "NYI", NYI;
    0x78: "SEI impl", Read=>Sei;
    0x79: "ADC abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Adc;
    0x7A: "NYI", NYI;
    0x7B: "NYI", NYI;
    0x7C: "NYI", NYI;
    0x7D: "ADC abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Adc;
    0x7E: "ROR abs,x", AbsOperand1=>AbsOperand2=>AbsXOperandNoSkip=>AbsIndexedPageCross=>DummyWrite=>Ror;
    0x7F: "NYI", NYI;
    0x80: "NYI", NYI;
    0x81: "NYI", NYI;
    0x82: "NYI", NYI;
    0x83: "NYI", NYI;
    0x84: "NYI", NYI;
    0x85: "NYI", NYI;
    0x86: "NYI", NYI;
    0x87: "NYI", NYI;
    0x88: "DEY impl", Read=>Dey;
    0x89: "NYI", NYI;
    0x8A: "TXA impl", Read=>Txa;
    0x8B: "NYI", NYI;
    0x8C: "NYI", NYI;
    0x8D: "NYI", NYI;
    0x8E: "NYI", NYI;
    0x8F: "NYI", NYI;
    0x90: "BCC rel", RelOperand=>Bcc=>RelBranch1=>RelBranch2;
    0x91: "NYI", NYI;
    0x92: "NYI", NYI;
    0x93: "NYI", NYI;
    0x94: "NYI", NYI;
    0x95: "NYI", NYI;
    0x96: "NYI", NYI;
    0x97: "NYI", NYI;
    0x98: "TYA impl", Read=>Tya;
    0x99: "NYI", NYI;
    0x9A: "TXS impl", Read=>Txs;
    0x9B: "NYI", NYI;
    0x9C: "NYI", NYI;
    0x9D: "NYI", NYI;
    0x9E: "NYI", NYI;
    0x9F: "NYI", NYI;
    0xA0: "LDY imm", ImmOperand=>Ldy;
    0xA1: "LDA (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>Lda;
    0xA2: "LDX imm", ImmOperand=>Ldx;
    0xA3: "NYI", NYI;
    0xA4: "LDY zpg", ZpgOperand=>ZpgOperand2=>Ldy;
    0xA5: "LDA zpg", ZpgOperand=>ZpgOperand2=>Lda;
    0xA6: "LDX zpg", ZpgOperand=>ZpgOperand2=>Ldx;
    0xA7: "NYI", NYI;
    0xA8: "TAY impl", Read=>Tay;
    0xA9: "LDA imm", ImmOperand=>Lda;
    0xAA: "TAX impl", Read=>Tax;
    0xAB: "NYI", NYI;
    0xAC: "LDY abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Ldy;
    0xAD: "LDA abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Lda;
    0xAE: "LDX abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Ldx;
    0xAF: "NYI", NYI;
    0xB0: "BCS rel", RelOperand=>Bcs=>RelBranch1=>RelBranch2;
    0xB1: "LDA (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>Lda;
    0xB2: "NYI", NYI;
    0xB3: "NYI", NYI;
    0xB4: "LDY zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Ldy;
    0xB5: "LDA zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Lda;
    0xB6: "LDX zpg,y", ZpgOperand=>ZpgIndexedOperand=>ZpgYOperand=>Ldx;
    0xB7: "NYI", NYI;
    0xB8: "CLV impl", Read=>Clv;
    0xB9: "LDA abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Lda;
    0xBA: "TSX impl", Read=>Tsx;
    0xBB: "NYI", NYI;
    0xBC: "LDY abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Ldy;
    0xBD: "LDA abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Lda;
    0xBE: "LDX abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Ldx;
    0xBF: "NYI", NYI;
    0xC0: "NYI", NYI;
    0xC1: "CMP (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>Cmp;
    0xC2: "NYI", NYI;
    0xC3: "NYI", NYI;
    0xC4: "NYI", NYI;
    0xC5: "CMP zpg", ZpgOperand=>ZpgOperand2=>Cmp;
    0xC6: "DEC zpg", ZpgOperand=>ZpgOperand2=>DummyWrite=>Dec;
    0xC7: "NYI", NYI;
    0xC8: "INY impl", Read=>Iny;
    0xC9: "CMP imm", ImmOperand=>Cmp;
    0xCA: "NYI", NYI;
    0xCB: "NYI", NYI;
    0xCC: "NYI", NYI;
    0xCD: "CMP abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Cmp;
    0xCE: "DEC abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>DummyWrite=>Dec;
    0xCF: "NYI", NYI;
    0xD0: "BNE rel", RelOperand=>Bne=>RelBranch1=>RelBranch2;
    0xD1: "CMP (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>Cmp;
    0xD2: "NYI", NYI;
    0xD3: "NYI", NYI;
    0xD4: "NYI", NYI;
    0xD5: "CMP zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Cmp;
    0xD6: "DEC zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>DummyWrite=>Dec;
    0xD7: "NYI", NYI;
    0xD8: "CLD", Read=>Cld;
    0xD9: "CMP abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Cmp;
    0xDA: "NYI", NYI;
    0xDB: "NYI", NYI;
    0xDC: "NYI", NYI;
    0xDD: "CMP abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Cmp;
    0xDE: "DEC abs,x", AbsOperand1=>AbsOperand2=>AbsXOperandNoSkip=>AbsIndexedPageCross=>DummyWrite=>Dec;
    0xDF: "NYI", NYI;
    0xE0: "NYI", NYI;
    0xE1: "SBC (ind,x)", ZpgOperand=>ZpgIndexedOperand=>IndirectXAddressLo=>IndirectIndexedAddressHi=>AbsOperand3=>Sbc;
    0xE2: "NYI", NYI;
    0xE3: "NYI", NYI;
    0xE4: "NYI", NYI;
    0xE5: "SBC zpg", ZpgOperand=>ZpgOperand2=>Sbc;
    0xE6: "INC zpg", ZpgOperand=>ZpgOperand2=>DummyWrite=>Inc;
    0xE7: "NYI", NYI;
    0xE8: "INX impl", Read=>Inx;
    0xE9: "SBC imm", ImmOperand=>Sbc;
    0xEA: "NOP impl", Read=>Read;
    0xEB: "NYI", NYI;
    0xEC: "NYI", NYI;
    0xED: "SBC abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>Sbc;
    0xEE: "INC abs", AbsOperand1=>AbsOperand2=>AbsOperand3=>DummyWrite=>Inc;
    0xEF: "NYI", NYI;
    0xF0: "BEQ rel", RelOperand=>Beq=>RelBranch1=>RelBranch2;
    0xF1: "SBC (ind),y", ZpgOperand=>IndirectYAddressLo=>IndirectIndexedAddressHi=>AbsYOperand=>AbsIndexedPageCross=>Sbc;
    0xF2: "NYI", NYI;
    0xF3: "NYI", NYI;
    0xF4: "NYI", NYI;
    0xF5: "SBC zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>Sbc;
    0xF6: "INC zpg,x", ZpgOperand=>ZpgIndexedOperand=>ZpgXOperand=>DummyWrite=>Inc;
    0xF7: "NYI", NYI;
    0xF8: "SED impl", Read=>Sed;
    0xF9: "SBC abs,y", AbsOperand1=>AbsOperand2=>AbsYOperand=>AbsIndexedPageCross=>Sbc;
    0xFA: "NYI", NYI;
    0xFB: "NYI", NYI;
    0xFC: "NYI", NYI;
    0xFD: "SBC abs,x", AbsOperand1=>AbsOperand2=>AbsXOperand=>AbsIndexedPageCross=>Sbc;
    0xFE: "INC abs,x", AbsOperand1=>AbsOperand2=>AbsXOperandNoSkip=>AbsIndexedPageCross=>DummyWrite=>Inc;
    0xFF: "NYI", NYI
);
